import { type ChangeEvent, useState } from "react";
import { type NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import { useRouter } from "next/router";

const urlRegex = new RegExp(
  "^((https?|ftp|file)://)?" + // protocol
    "((([a-zA-Z\\d]([a-zA-Z\\d-]*[a-zA-Z\\d])*)\\.)+[a-zA-Z]{2,}|" + // domain name
    "((\\d{1,3}\\.){3}\\d{1,3}))" + // OR ip (v4) address
    "(\\:\\d+)?(\\/[-a-zA-Z\\d%_.~+]*)*" + // port and path
    "(\\?[;&a-zA-Z\\d%_.~+=-]*)?" + // query string
    "(\\#[-a-zA-Z\\d_]*)?$" // fragment locator
);

const Home: NextPage = () => {
  const [input, setInput] = useState<string>("");
  const [url, setUrl] = useState<string>("");

  const isUrlValid = !url || urlRegex.test(url);

  const router = useRouter();

  const handleImageClick = () => {
    const link = document.createElement("a");
    link.href = `/api/downloadImage?url=${encodeURIComponent(url)}`;
    link.download = "image.jpg";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };
  return (
    <>
      <Head>
        <title>IG IMAGE DOWNLOADER</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-primary to-secondary">
        <h1 className="mb-5 text-center text-[4.2rem] font-bold text-neutral md:text-[6rem]">
          IG Image Downloader
        </h1>
        <div className="flex w-1/2 min-w-[25rem] flex-wrap items-center justify-center gap-3 text-[3.2rem]">
          {!url && (
            <>
              <div className="relative flex items-center justify-center">
                <input
                  type="text"
                  placeholder="Type here"
                  className={`input-bordered input input-lg w-full max-w-md ${
                    isUrlValid ? "input-neutral" : "input-error"
                  }`}
                  value={input}
                  onChange={(e: ChangeEvent<HTMLInputElement>) =>
                    setInput(e.target.value)
                  }
                />
              </div>
              <button
                className="btn-accent btn-lg btn text-neutral"
                disabled={!isUrlValid}
                onClick={() => {
                  const url = new URL(input);
                  console.log(url.origin + url.pathname + "media?size=l");
                  void setUrl(url.origin + url.pathname + "media?size=l");
                }}
              >
                GET the image!!
              </button>
            </>
          )}
        </div>
        {url && (
          <>
            <div className="relative mt-10 h-[30rem] w-full">
              <Image
                src={url}
                alt="the image you want"
                fill
                style={{ objectFit: "contain" }}
              ></Image>
            </div>
            <div className="mt-3 flex items-center gap-3">
              <button
                className="btn-accent btn-lg btn"
                onClick={handleImageClick}
              >
                DOWNLOAD!
              </button>
              <button
                className="btn-secondary btn-lg btn"
                onClick={() => void router.reload()}
              >
                Back
              </button>
            </div>
          </>
        )}
      </main>
    </>
  );
};

export default Home;
